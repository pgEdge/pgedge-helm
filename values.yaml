# -- Additional annotations to apply to all created objects.
annotations: {}
# -- Additional labels to apply to all created objects.
labels: {}
pgEdge:
  # -- Determines the name of resources in the pgEdge cluster. Many other
  # values are derived from this name, so it must be less than or equal to 26 characters in length.
  appName: pgedge
  # -- Sets the major version of PostgreSQL to use. Must be one of the major versions defined in the  
  # included ImageCatalog. The default is 17, which uses PostgreSQL 17 with pgEdge extensions.
  pgMajorVersion: 17
  # --- Whether to deploy cert-manager to manage TLS certificates for the cluster.
  # If false, you must provide your own TLS certificates by creating the secrets defined in
  # `clusterSpec.certificates.clientCASecret` and `clusterSpec.certificates.replicationTLSSecret`.
  provisionCerts: true
  # -- Configuration for each node in the cluster. Each node will be deployed as a separate CNPG Cluster.
  nodes: []
  # -- Default CNPG Cluster specification applied to all nodes, which can be overridden on a per-node basis
  # using the `clusterSpec` field in each node definition.
  clusterSpec:
    instances: 1
    certificates:
        clientCASecret: client-ca-key-pair
        replicationTLSSecret: streaming-replica-client-cert
    bootstrap:
      initdb:
        database: app
        owner: app
        encoding: UTF8
        postInitSQL: []
        postInitApplicationSQL:
          - CREATE EXTENSION spock;
          - CREATE EXTENSION snowflake;
          - CREATE EXTENSION lolor;
        postInitTemplateSQL: []
    postgresql:
      parameters:
        dynamic_shared_memory_type: "posix"
        wal_level: "logical"
        checkpoint_timeout: "15min"
        checkpoint_completion_target: "0.9"
        wal_sender_timeout: "5s"
        track_commit_timestamp: "on"
        hot_standby_feedback: "on"
        sync_replication_slots: 'on'
        track_io_timing: "on"
        spock.enable_ddl_replication: "on"
        spock.include_ddl_repset: "on"
        spock.allow_ddl_from_functions: "on"
        spock.conflict_resolution: "last_update_wins"
        spock.save_resolutions: "on"
        spock.conflict_log_level: "DEBUG"
      shared_preload_libraries:
        - pg_stat_statements
        - snowflake
        - spock
    affinity:
      nodeSelector: {}