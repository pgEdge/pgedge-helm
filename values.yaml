# -- Additional annotations to apply to all created objects.
annotations: {}
# -- Additional labels to apply to all created objects.
labels: {}
pgEdge:
  # -- Determines the name of the pgEdge StatefulSet and theapp.kubernetes.io/name label. Many other
  # values are derived from this name, so it must be less than or equal to 26 characters in length.
  appName: pgedge
  # -- Sets the major version of PostgreSQL to use. Must be one of the major versions defined in the  
  # included ImageCatalog. The default is 17, which uses PostgreSQL 17 with pgEdge extensions.
  pgMajorVersion: 17
  # -- The name of an existing users secret in the release namespace. If not specified, a new secret
  # will generate random passwords for each user and store them in a new secret. See the
  # pgedge-docker README for the format of this secret:
  # https://github.com/pgEdge/pgedge-docker?tab=readme-ov-file#database-configuration
  existingUsersSecret: ""
  nodes: []
  clusterSpec:
    # -- The number of PostgreSQL instances to deploy in each CNPG Cluster
    instances: 1
    # -- initdb bootstrap configuration for each CNPG Cluster.
    bootstrap:
      initdb:
        database: app
        owner: app
        encoding: UTF8
        postInitSQL: []
        postInitApplicationSQL:
          - CREATE EXTENSION spock;
          - CREATE EXTENSION snowflake;
          - CREATE EXTENSION lolor;
        postInitTemplateSQL: []
    # -- PostgreSQL configuration parameters to set for each CNPG cluster.
    # These parameters will override the defaults defined in the values.yaml file.
    # See https://www.postgresql.org/docs/current/runtime-config.html for a list of available
    # parameters.
    postgresql:
      parameters:
        dynamic_shared_memory_type: "posix"
        wal_level: "logical"
        checkpoint_timeout: "15min"
        checkpoint_completion_target: "0.9"
        wal_sender_timeout: "5s"
        track_commit_timestamp: "on"
        hot_standby_feedback: "on"
        sync_replication_slots: 'on'
        track_io_timing: "on"
        spock.enable_ddl_replication: "on"
        spock.include_ddl_repset: "on"
        spock.allow_ddl_from_functions: "on"
        spock.conflict_resolution: "last_update_wins"
        spock.save_resolutions: "on"
        spock.conflict_log_level: "DEBUG"
      shared_preload_libraries:
        - pg_stat_statements
        - snowflake
        - spock
    affinity:
      nodeSelector: {}
  dbSpec:
    # -- Used to override the nodes in the generated db spec. This can be useful
    # in multi-cluster setups, like the included multi-cluster example.
    nodes: []
    # -- Database users to be created.
    users:
    - username: app
      superuser: false
      type: application
    - username: admin
      superuser: true
      
global:
  # -- Set to the cluster's domain if the cluster uses a custom domain.
  clusterDomain: cluster.local