# pgEdge Distributed Postgres Helm Chart

{{ template "chart.description" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

## Features

At a high level, this chart features:

- Support for Postgres 16, 17, and 18 via [pgEdge Enterprise Postgres Images](https://github.com/pgEdge/postgres-images)
- Support for configuring Spock replication across all nodes during helm install and upgrade
- Best practice configuration defaults for deploying pgEdge Distributed Postgres in Kubernetes
- Ability to extend / override configuration for CloudNativePG across all nodes, or on specific nodes
- Ability to configure standby instances with automatic failover, leveraging spock's delayed feedback and failover slots worker to maintain multi-active replication across failovers / promotions
- Ability to add pgEdge nodes using spock or CloudNativePG's bootstrap capabilities to synchronize data from existing nodes or backups
- Ability to perform Postgres major and minor version upgrades for Postgres
- Client certificate authentication for managed users, including the pgedge replication user
- Configuration mechanisms to support multi-cluster deployments

## Prerequisites

In order for this chart to work, you must pre-install two operators into your Kubernetes clusters:

- [CloudNativePG](https://cloudnative-pg.io/)
- [cert-manager](https://cert-manager.io/)

## Documentation

The documentation for this chart uses MkDocs with the Material theme to generate styled static HTML documentation from Markdown files in the docs directory.

The documentation can be accessed locally at http://localhost:8000 using:

```shell
make docs
```

### helm-docs

[helm-docs](https://github.com/norwoodj/helm-docs) is used to generate values.yaml reference documentation dynamically from `values.yaml`. 

This is in use in the following files:

- README.md.gotmpl
  - generates README.md
- docs/configuration.md.gotmpl
  - generates docs/configuration.md

You can run `make gen-docs` after updating the templates to generate the associated markdown file.

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

{{ template "helm-docs.versionFooter" . }}
