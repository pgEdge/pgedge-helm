{{- $ := . -}}
{{- $defaults := .Values.pgEdge.clusterSpec -}}
{{- range $i, $node := .Values.pgEdge.nodes }}
{{- $spec := ($node.clusterSpec | default dict) -}}
{{- $merged := merge $spec $defaults -}}
{{- $ordinal := default (trimPrefix "n" $node.name) $node.ordinal }}
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ printf "%s-%s" $.Values.pgEdge.appName $node.name }}
  labels:
    app.kubernetes.io/name: {{ $.Chart.Name }}
spec:
  instances: {{ $merged.instances }}
  affinity:
    {{- with $merged.affinity }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
  bootstrap:
    initdb:
        database: {{ $merged.bootstrap.initdb.database }}
        owner: {{ $merged.bootstrap.initdb.owner }}
        encoding: {{ $merged.bootstrap.initdb.encoding }}
{{- with $merged.bootstrap.initdb.postInitApplicationSQL }}
        postInitApplicationSQL:
{{- toYaml . | nindent 10 }}
{{- end }}
{{- with $merged.bootstrap.initdb.postInitSQL }}
        postInitSQL:
{{- toYaml . | nindent 10 }}
{{- end }}
{{- with $merged.bootstrap.initdb.postInitTemplateSQL }}
        postInitTemplateSQL:
{{- toYaml . | nindent 10 }}
{{- end }}
  managed:
    roles:
    - name: admin
      ensure: present
      comment: Admin role
      login: true
      superuser: true
      passwordSecret:
        name: admin-user-secret
  postgresql:
    parameters:
      {{- with $merged.postgresql.parameters }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      snowflake.node: "{{ $ordinal }}"
      lolor.node: "{{ $ordinal }}"
    shared_preload_libraries:
      {{- with $merged.postgresql.shared_preload_libraries }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  imageCatalogRef:
    apiGroup: postgresql.cnpg.io
    kind: ImageCatalog
    name: {{ printf "%s-image-catalog" $.Values.pgEdge.appName }}
    major: {{ $.Values.pgEdge.pgMajorVersion }}
  storage:
    {{- with $merged.storage }}
      {{- toYaml . | nindent 6 }}
    {{- end }}
{{ end }}