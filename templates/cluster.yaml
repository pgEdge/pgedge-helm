{{- $ := . -}}
{{- $count := (.Values.pgEdge.nodeCount | int) -}}
{{- range $i := until $count }}
{{- $nodeOrdinal := add1 $i }}
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ printf "%s-%d" $.Release.Name $nodeOrdinal }}
  labels:
    app.kubernetes.io/name: {{ $.Chart.Name }}
    app.kubernetes.io/instance-index: "{{ $nodeOrdinal }}"
spec:
  instances: 1
  affinity:
    nodeSelector:
      agentpool: "armpool"
  bootstrap:
    initdb:
      postInitApplicationSQL:
        - CREATE EXTENSION spock;
        - CREATE EXTENSION snowflake;
        - CREATE EXTENSION lolor;
  managed:
    roles:
    - name: admin
      ensure: present
      comment: Admin role
      login: true
      superuser: true
      passwordSecret:
        name: admin-user-secret
  postgresql:
    parameters:
      dynamic_shared_memory_type: "posix"
      wal_level: "logical"
      checkpoint_timeout: "15min"
      checkpoint_completion_target: "0.9"
      wal_sender_timeout: "5s"
      track_commit_timestamp: "on"
      hot_standby_feedback: "on"
      track_io_timing: "on"
      spock.enable_ddl_replication: "on"
      spock.include_ddl_repset: "on"
      spock.allow_ddl_from_functions: "on"
      spock.conflict_resolution: "last_update_wins"
      spock.save_resolutions: "on"
      spock.conflict_log_level: "DEBUG"
      snowflake.node: "{{ $nodeOrdinal }}"
      lolor.node: "{{ $nodeOrdinal }}"
    shared_preload_libraries:
      - pg_stat_statements
      - snowflake
      - spock
  imageCatalogRef:
    apiGroup: postgresql.cnpg.io
    kind: ImageCatalog
    name: pgedge-catalog
    major: 17
  storage:
    size: 1Gi
  
{{- end }}