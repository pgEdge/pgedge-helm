{{- if .Values.pgEdge.initSpock }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ printf "%s-init-spock" .Values.pgEdge.appName }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      serviceAccountName: init-spock
      restartPolicy: Never
      containers:
      - name: init-spock
        image: python:3.12-slim
        command:
          - /bin/sh
          - -c
          - |
            pip install psycopg2-binary kubernetes
            python -u /scripts/init-spock.py
        env:
          - name: APP_NAME
            value: {{ .Values.pgEdge.appName | quote }}
          - name: DB_NAME
            value: app
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
          - name: spock-init-script
            mountPath: /scripts
          - name: pgedge-config
            mountPath: /config
            readOnly: true
          - name: admin-client-cert
            mountPath: /certificates/admin
            readOnly: true
      volumes:
        - name: spock-init-script
          configMap:
            name: spock-init-script
        - name: pgedge-config
          configMap:
            name: {{ printf "%s-config" .Values.pgEdge.appName }}
            items:
              - key: nodes
                path: pgedge.yaml
        - name: admin-client-cert
          secret:
            secretName: admin-client-cert
            items:
              - key: tls.crt
                path: tls.crt
                mode: 0600
              - key: tls.key
                path: tls.key
                mode: 0600
              - key: ca.crt
                path: ca.crt
                mode: 0600
{{- end }}
